in javascript datatypes are basically divided into 2 types one is prmitive and another is non primitive 
they are divided on basis of the vo kis tarah se store hote hai and hum use kis tarah se access kar sakte hai is basis pe 
#primitive -7 call by value-> String ,Number ,Boolean ,null,undefined,Symbol(unique banane ke liye),BigInt
#reference or non primitive -> Array,Object ,Function

*** javascript is the dynamically typed language which means that data types of variable are determined by the value they hold at runtime and can chaged throughout the program 
const isLoggeIn = false
let userEmail;// undefined
//symbol in javascript
const sym1= Symbol('sym')==  ye dono dikhane me bhalehi same value ke lag rahe ho byt actually values same nahi hai
const sym2 = Sybol('sym')==

const bigNumber =788959257905297020952798052709590285798209n


const heros =["shaktimman", "nagraj","doga" ]
let myObj = {
    name: "Hitesh"
    age:22
}

const myfunction = function(){
    console.log("Hello world")
}

console.log(myfunction)

++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++


memories of the type Stack(primitive-> reference) ,Heap(non-primitive->call by value)
//let us understand it in the depth


let num1 =4
let num2= num1
let num2=9
console.log(num1)
console.log(num2)
// yaha pe num2 ki value tumhari 9 hogi and num1 ki value still 4 hi hogi ->referance that is copy of num pass hoti hai
let user ={
    email: "usermail@gmail.com"
    upi : "user@ybl"

}

let user2 = user
user2.email ="swapnil@SN7gmail.com"
console.log(user.email)
console.log(user2.email)

// is case mai dono ka email change ho chucka hoga reason is simple ye heap ko use karata hai
